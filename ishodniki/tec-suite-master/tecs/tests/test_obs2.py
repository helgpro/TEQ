#!/usr/bin/env python
# coding=utf8
"""
File: 
Description: 
"""
from __future__ import division
from __future__ import absolute_import
from __future__ import print_function
from __future__ import unicode_literals
from builtins import next
from builtins import object

from io import StringIO

import datetime

import tecs.rinex.v2.o as obs_v2

# noinspection PyPep8
RINEX = """     2.11           OBSERVATION DATA    M (MIXED)           RINEX VERSION / TYPE
teqc  2015Jun23     BKG Frankfurt       20160412 00:23:08UTCPGM / RUN BY / DATE
Linux 2.4.21-27.ELsmp|Opteron|gcc -static|Linux x86_64|=+   COMMENT
TEQC  2015SEP14                         20160411 01:07:32UTCCOMMENT
LINUX 2.4.20-8|PENTIUM IV|GCC -STATIC|LINUX|486/DX+         COMMENT
TEQC  2015SEP14                         20160411 00:17:17UTCCOMMENT
LINUX 2.4.20-8|PENTIUM IV|GCC -STATIC|LINUX|486/DX+         COMMENT
TEQC  2015SEP14                         20160411 00:16:04UTCCOMMENT
BIT 2 OF LLI FLAGS DATA COLLECTED UNDER A/S CONDITION       COMMENT
ZWE2                                                        MARKER NAME
12330M003                                                   MARKER NUMBER
GFZ                 GFZ                                     OBSERVER / AGENCY
1348                SEPT POLARX2        2.6.0               REC # / TYPE / VERS
217-0340            TPSCR3_GGD      NONE                    ANT # / TYPE
  2886359.0000  2155972.0000  5245886.0000                  APPROX POSITION XYZ
        0.1300        0.0000        0.0000                  ANTENNA: DELTA H/E/N
     1     1                                                WAVELENGTH FACT L1/2
 SNR IS MAPPED TO RINEX SNR FLAG VALUE [0-9]                COMMENT
  L1 & L2: MIN(MAX(INT(SNR_DBHZ/6), 0), 9)                  COMMENT
    17                                                      LEAP SECONDS
     7    L1    L2    C1    P1    P2    S1    S2            # / TYPES OF OBSERV
    30.0000                                                 INTERVAL
Forced Modulo Decimation to 30 seconds                      COMMENT
Concatenated RINEX files (24/24)                            COMMENT
  2016     4    11     0     0    0.0000000     GPS         TIME OF FIRST OBS
                                                            END OF HEADER
 16  4 11  0  0  0.0000000  0 16G18G11G32G01G15G24G14G21G08G28G27G10
                                G22S28S36S23
 -33772003.62747 -26049584.20544  20265784.756    20265782.383    20265782.236
        43.000          26.000
 -19084053.96547 -14697668.51244  19748288.818    19748288.398    19748287.988
        44.000          28.000
 -19121535.87648 -14829287.29346  19246313.191    19246312.878    19246315.486
        48.000          36.000
  -9388357.98846  -7149338.29043  21141152.437    21141152.447    21141156.618
        38.000          18.000
 -20578368.65746 -15071975.91642  23023722.006    23023722.113    23023721.088
        36.000          12.000
  -8615275.95846  -6641407.74842  21495775.090    21495775.050    21495777.082
        37.000          16.000
 -19540585.79347 -15073113.16445  19524148.767    19524147.302    19524148.386
        45.000          30.000
 -37622246.85746 -27782971.96341  22370400.977    22370399.815    22370401.954
        36.000          10.000
 -35528268.22348 -27479332.46646  18589753.690    18589752.586    18589755.653
        49.000          40.000
  -9100710.39146  -6934885.20442  22114395.234    22114394.433    22114394.140
        38.000          16.000
 -40378694.79347 -30584989.31146  19364796.289    19364795.126    19364797.295
        47.000          36.000
 -38822056.24148 -29538334.84447  18033707.841    18033706.981    18033709.081
        52.000          44.000
  -8434934.73246  -6481935.91643  21363658.917    21363656.964    21363655.469
        39.000          20.000
          .16616                  19581089.672
        36.000
          .52516                  18988381.364
        39.000
-272151047.08516                  18423932.603
        40.000
 16  4 11  0  0 30.0000000  0 16G18G11G32G01G15G24G14G21G08G28G27G10
                                G22S28S36S23
 -33740654.04147 -26025155.96244  20271749.444    20271748.341    20271747.833
        42.000          24.000
 -19223607.62247 -14806411.61344  19721732.461    19721732.276    19721731.494
        44.000          28.000
 -19248480.03148 -14928204.79746  19222157.274    19222156.795    19222158.456
        49.000          38.000
  -9539136.16846  -7266827.75543  21112461.850    21112460.834    21112463.403
        39.000          20.000
 -20518133.82346 -15025039.79342  23035186.298    23035184.813    23035185.409
        38.000          16.000
  -8692150.77746  -6701310.21542  21481147.162    21481146.116    21481147.982
        37.000          16.000
 -19663334.11847 -15168761.18845  19500790.773    19500789.650    19500790.314
        45.000          32.000
 -37576245.31045 -27747126.63541  22379155.200    22379154.868    22379155.640
        35.000          10.000
 -35555155.78148 -27500283.81846  18584636.919    18584635.982    18584638.853
        49.000          40.000
  -9181365.78846  -6997733.55142  22099047.189    22099045.851    22099045.890
        38.000          16.000
 -40342745.84247 -30556977.14946  19371636.285    19371635.718    19371638.629
        46.000          36.000
 -38830414.53548 -29544847.80447  18032117.329    18032116.528    18032118.589
        52.000          44.000
  -8581658.07246  -6596265.76343  21335737.553    21335736.039    21335735.492
        39.000          20.000
    -48702.98716                  19571822.530
        36.000
    -48819.73216                  18979089.430
        39.000
-272199878.72016                  18414639.066
        41.000
 16  4 11  0  1  0.0000000  0 15G18G11G32G01G24G14G21G08G28G27G10G22
                                S28S36S23
 -33709133.69547 -26000594.67444  20277748.468    20277746.182    20277745.870
        43.000          24.000
 -19362826.28447 -14914893.68444  19695240.997    19695239.990    19695238.975
        44.000          28.000
 -19374993.18448 -15026786.46446  19198082.201    19198081.361    19198083.383
        48.000          36.000
  -9689797.21346  -7384225.97643  21083791.199    21083791.395    21083793.514
        39.000          20.000
  -8768481.87746  -6760788.97442  21466622.085    21466620.747    21466623.169
        36.000          16.000
 -19785673.73147 -15264090.73845  19477510.301    19477508.943    19477509.784
        45.000          32.000
 -37530142.70145 -27711202.48641  22387928.471    22387927.954    22387927.573
        34.000           8.000
 -35581452.46548 -27520774.75246  18579632.691    18579631.802    18579634.820
        48.000          40.000
  -9261535.17546  -7060203.14442  22083791.074    22083790.146    22083790.234
        38.000          16.000
 -40306404.00847 -30528658.86346  19378552.367    19378551.497    19378554.037
        46.000          36.000
 -38838359.90048 -29551038.99947  18030605.501    18030604.505    18030606.605
        52.000          44.000
  -8728261.52046  -6710502.19243  21307839.515    21307838.538    21307837.649
        39.000          20.000
    -97417.58916                  19562553.580
        37.000
    -97648.81516                  18969799.497
        39.000
-272248721.32816                  18405345.383
        41.000
"""


class TestObs2(object):
    def __init__(self):
        self.fobj = StringIO(RINEX)
        self.obs = None
        self.err_msg = 'Wrong value: {result} (expected: {standard});' \
                       ' index={i}'

    def setup(self):
        self.obs = obs_v2.Obs211(self.fobj, 'zwe21020.16o')

    def test_read_records(self):

        records = iter(self.obs.read_records())

        s_dt = datetime.datetime(2016, 4, 11)
        s_sat = ('G18', 'G11')
        # (-33772003.62747)
        # (-26049584.20544)
        # (20265784.756)
        # (20265782.383)
        # (20265782.236)
        # (43.000)
        # (26.000)
        s_obs = (
            {'L1': (-33772003.627, 4, 7),
             'L2': (-26049584.205, 4, 4),
             'C1': (20265784.756, 0, 0),
             'P1': (20265782.383, 0, 0),
             'P2': (20265782.236, 0, 0),
             'S1': (43.000, 0, 0),
             'S2': (26.000, 0, 0)},

            {'L1': (-19084053.965, 4, 7),
             'L2': (-14697668.512, 4, 4),
             'C1': (19748288.818, 0, 0),
             'P1': (19748288.398, 0, 0),
             'P2': (19748287.988, 0, 0),
             'S1': (44.000, 0, 0),
             'S2': (28.000, 0, 0)}
        )

        test_rec = []

        i = 0
        while i < 2:
            test_rec.append(next(records))
            i += 1

        for i, r in enumerate(test_rec):
            assert r[0] == s_dt
            assert r[1] == s_sat[i]
            assert r[2] == s_obs[i]
