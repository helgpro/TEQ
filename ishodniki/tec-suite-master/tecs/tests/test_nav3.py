#!/usr/bin/env python
# coding=utf8
"""
File: 
Description: 
"""
from __future__ import division
from __future__ import absolute_import
from __future__ import print_function
from __future__ import unicode_literals
from builtins import object

import datetime

# import nose

from tecs.rinex.v3.n import Nav3

from io import StringIO

NAV_MESSAGE = """\
     3.02           N: GNSS NAV DATA    M: Mixed            RINEX VERSION / TYPE
dconv               JAXA                20160410 004343 UTC PGM / RUN BY / DATE
                                                            END OF HEADER
G29 2016  4  9  2  0  0  .656767282635E-03  .341060513165E-12  .000000000000E+00
      .760000000000E+02  .115625000000E+02  .417053086221E-08 -.387930192587E+00
      .687316060066E-06  .106312881690E-02  .126846134663E-04  .515359343338E+04
      .525600000000E+06  .167638063431E-07 -.228311095482E+01  .465661287308E-07
      .976849602896E+00  .145906250000E+03 -.402131063150E+00 -.778139555493E-08
      .627526138983E-09  .100000000000E+01  .189100000000E+04  .000000000000E+00
      .240000000000E+01  .000000000000E+00 -.102445483208E-07  .760000000000E+02
      .518418000000E+06  .400000000000E+01
R 6 2016  4  9  0 15  0  .869557261467E-04  .000000000000E+00  .518400000000E+06
      .956438037109E+04 -.294016265869E+01  .931322574615E-09  .000000000000E+00
      .988669970703E+04  .107234001160E+00  .000000000000E+00 -.400000000000E+01
      .214767177734E+05  .125633621216E+01 -.279396772385E-08  .000000000000E+00
E22 2016  4  9  0  0  0  .171785906423E-02  .176740400093E-09  .000000000000E+00
      .000000000000E+00  .809062500000E+02  .333799618380E-08  .536761431731E+00
      .367499887943E-05  .702622346580E-04  .860169529915E-05  .544059588623E+04
      .518400000000E+06 -.223517417908E-07 -.187535477416E+01 -.577419996262E-07
      .964758985810E+00  .155406250000E+03  .259200185309E+01 -.566952187263E-08
      .635740766869E-09  .513000000000E+03  .189100000000E+04  .000000000000E+00
      .107000000000E+03                    -.535510480404E-08 -.651925802231E-08
      .519085000000E+06  .000000000000E+00
"""


class TestNav3(object):
    def __init__(self):
        self.fobj = StringIO(NAV_MESSAGE)
        self.nav = None

    def setup(self):
        self.nav = Nav3(self.fobj, 'anmg1000.16p')

    def test__init__(self):
        g29 = (.760000000000E+02, .115625000000E+02, .417053086221E-08,
               -.387930192587E+00, .687316060066E-06, .106312881690E-02,
               .126846134663E-04, .515359343338E+04, .525600000000E+06,
               .167638063431E-07, -.228311095482E+01, .465661287308E-07,
               .976849602896E+00, .145906250000E+03, -.402131063150E+00,
               -.778139555493E-08, .627526138983E-09, .100000000000E+01,
               .189100000000E+04, .000000000000E+00, .240000000000E+01,
               .000000000000E+00, -.102445483208E-07, .760000000000E+02,
               .518418000000E+06, .400000000000E+01)
        r06 = (.956438037109E+04, -.294016265869E+01, .931322574615E-09,
               .000000000000E+00, .988669970703E+04, .107234001160E+00,
               .000000000000E+00, -.400000000000E+01, .214767177734E+05,
               .125633621216E+01, -.279396772385E-08, .000000000000E+00)
        e22 = (.000000000000E+00, .809062500000E+02, .333799618380E-08,
               .536761431731E+00, .367499887943E-05, .702622346580E-04,
               .860169529915E-05, .544059588623E+04, .518400000000E+06,
               -.223517417908E-07, -.187535477416E+01, -.577419996262E-07,
               .964758985810E+00, .155406250000E+03, .259200185309E+01,
               -.566952187263E-08, .635740766869E-09, .513000000000E+03,
               .189100000000E+04, .000000000000E+00, .107000000000E+03,
               .000000000000E+00, -.535510480404E-08, -.651925802231E-08,
               .519085000000E+06, .000000000000E+00)

        standard = {
            'G': {29: {datetime.time(2, 0): g29}},
            'R': {6: {datetime.time(0, 15): r06}},
            'E': {22: {datetime.time(0, 0): e22}}
        }

        assert self.nav.ver_type.value == (3.02, 'N', 'M')
        assert standard == self.nav.message

    def test__parse_epoch_record(self):
        # noinspection PyPep8
        rec = 'E22 2016 04 08 23 50 00 1.717753009871D-03 1.767404000930D-10' \
              ' 0.000000000000D+00'
        standard = ('E', 22, datetime.datetime(2016, 4, 8, 23, 50),
                    (1.717753009871e-3, 1.767404000930e-10, 0.))
        test = self.nav._parse_epoch_record(rec)

        msg = '{}\n{}'.format(standard, test)
        assert standard == test, msg

    def test__read_orbits(self):
        # noinspection PyPep8
        header_slice = [
            u'     9.500000000000D+01 8.200000000000D+02 3.000000000000d-01'
            u' 4.500000000000D-01\n',
            u'     3.745000000000e-06 0.000000000000D-00-8.500000000000D-06\n',
        ]
        standard = [95., 820, 0.3, 0.45, 3.745e-06, 0., -8.5e-06, 0]

        test = self.nav._read_orbits(header_slice, (4, 4))
        assert standard == test
