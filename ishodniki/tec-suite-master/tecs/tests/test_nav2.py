#!/usr/bin/env python
# coding=utf8
"""
File: 
Description: 
"""
from __future__ import division
from __future__ import absolute_import
from __future__ import print_function
from __future__ import unicode_literals
from future import standard_library
from tecs.rinex.basic import RinexError

standard_library.install_aliases()
import datetime

try:
    import io
except ImportError:
    from io import StringIO

from nose.tools import raises

from tecs.rinex.v2.n import Nav2

GPS_MSG = """\
     2.10           N: GPS NAV DATA                         RINEX VERSION / TYPE
JPS2RIN v.2.0.99    JAVAD GNSS          20160410 020107 UTC PGM / RUN BY / DATE
    17                                                      LEAP SECONDS
                                                            END OF HEADER
22 16  4  9  1 59 44.0 3.662272356451D-04-7.275957614183D-12 0.000000000000D+00
    1.000000000000D+00-6.659375000000D+01 5.319150135382D-09-3.044107669520D+00
   -3.516674041748D-06 7.852241629735D-03 9.730458259583D-06 5.155054737091D+03
    5.255840000000D+05 4.470348358154D-08-2.734383806175D-01-7.636845111847D-08
    9.232109186176D-01 1.687187500000D+02-1.998436481210D+00-8.324989626377D-09
   -6.707422248202D-10 1.000000000000D+00 1.891000000000D+03 0.000000000000D+00
    2.000000000000D+00 0.000000000000D+00-1.769512891769D-08 1.000000000000D+00
    5.191800000000D+05 4.000000000000D+00
 1 16  4  9  2  0  0.0 1.677218824625D-05 1.136868377216D-12 0.000000000000D+00
    6.300000000000D+01 1.587500000000D+01 5.129856536258D-09 1.346829955959D+00
    1.018866896629D-06 5.258966004476D-03 4.190951585770D-06 5.153641599655D+03
    5.256000000000D+05 5.029141902924D-08-1.284380980675D+00 1.545995473862D-07
    9.636548264458D-01 2.997812500000D+02 4.497375188357D-01-8.562142361883D-09
    7.857470152314D-12 1.000000000000D+00 1.891000000000D+03 0.000000000000D+00
    2.000000000000D+00 0.000000000000D+00 5.122274160385D-09 6.300000000000D+01
    5.184000000000D+05 4.000000000000D+00
"""

GPS_MSG_ERR = """\
     2              NAVIGATION DATA                         RINEX VERSION / TYPE
CCRINEXN V1.6.0 UX  CDDIS               16-OCT-11 15:33     PGM / RUN BY / DATE
IGS BROADCAST EPHEMERIS FILE                                COMMENT
    0.2328D-07  0.0000D+00 -0.1192D-06  0.0000D+00          ION ALPHA
    0.1290D+06 -0.1638D+05 -0.2621D+06  0.6554D+05          ION BETA
    0.000000000000D+00 0.266453525910D-14    61440     1658 DELTA-UTC: A0,A1,T,W
    15                                                      LEAP SECONDS
                                                            END OF HEADER
 2 11 10 15  7 59 44.0 0.234404578805D-04 0.181898940355D-11 0.000000000000D+00
    0.200000000000D+01-0.155312500000D+02 0.429732205376D-08 0.381762832789D+00
   -0.789761543274D-06 0.102392956615D-02 0.105667859316D-04 0.515358642387D+04
    0.547184000000D+06-0.745058059692D-08 0.798393198864D+00 0.149011611938D-07
    0.965796816468D+00 0.175500000000D+03 0.963491112747D+00-0.784425502331D-08
    0.326085020097D-09 0.100000000000D+01 0.165700000000D+04 0.000000000000D+00
    0.200000000000D+01 0.000000000000D+00 0.558793544769D-08 0.200000000000D+01
    0.547184000000D+06 0.000000000000D+00 0.499063315051-269 0.664593648549-315
"""

GLO_MSG = """\
     2.10           GLONASS NAV DATA                        RINEX VERSION / TYPE
JPS2RIN v.2.0.99    JAVAD GNSS          20160410 020107 UTC PGM / RUN BY / DATE
  2016     4     9   -0.000000000000D+00                    CORR TO SYSTEM TIME
    17                                                      LEAP SECONDS
                                                            END OF HEADER
 5 16  4  9  0 15  0.0-8.258968591690D-06-9.094947017729D-13 0.000000000000D+00
   -1.095222851563D+04-2.799547195435D+00-2.793967723846D-09 0.000000000000D+00
    1.050820849609D+04 2.130680084229D-01-2.793967723846D-09 1.000000000000D+00
    2.049471679688D+04-1.604202270508D+00-1.862645149231D-09 0.000000000000D+00
 6 16  4  9  0 15  0.0 8.695572614670D-05 0.000000000000D+00 0.000000000000D+00
    9.564380371094D+03-2.940162658691D+00 9.313225746155D-10 0.000000000000D+00
    9.886699707031D+03 1.072340011597D-01 0.000000000000D+00-4.000000000000D+00
    2.147671777344D+04 1.256336212158D+00-2.793967723846D-09 0.000000000000D+00
"""

GLO_MSG_ERR = """\
     2.10           GLONASS NAV DATA                        RINEX VERSION / TYPE
JPS2RIN v.2.0.99    JAVAD GNSS          20160410 020107 UTC PGM / RUN BY / DATE
  2016     4     9   -0.000000000000D+00                    CORR TO SYSTEM TIME
    17                                                      LEAP SECONDS
                                                            END OF HEADER
 5 16  4  9  0 15  0.0-8.258968591690D-06-9.094947017729D-13 0.000000000000D+00
   -1.095222851563D+04-2.799547195435D+00-2.793967723846D-09 0.000000000000D+00
    1. hello :) 09D+04 2.130680084229D-01-2.793967723846D-09 1.000000000000D+00
    2.049471679688D+04-1.604202270508D+00-1.862645149231D-09 0.000000000000D+00
 6 16  4  9  0 15  0.0 8.695572614670D-05 0.000000000000D+00 0.000000000000D+00
    9.564380371094D+03-2.940162658691D+00 9.313225746155D-10 0.000000000000D+00
    9.886699707031D+03 1.072340011597D-01 0.000000000000D+00-4.000000000000D+00
    2.147671777344D+04 1.256336212158D+00-2.793967723846D-09 0.000000000000D+00
"""

# TODO GLONASS error message


def test__parse_epoch_record():
    messages = [
        (GPS_MSG, 'zimj1000.16n'),
        (GLO_MSG, 'zimj1000.16g')
    ]

    # noinspection PyPep8
    rec = [
        '22 16  4  9  1 59 44.0 3.662272356451D-04-7.275957614183D-12'
        ' 0.000000000000D+00',
        ' 5 16  4  9  0 15  0.0-8.258968591690D-06-9.094947017729D-13'
        ' 0.000000000000D+00'
    ]

    standard = [
        ('G', 22, datetime.datetime(2016, 4, 9, 1, 59, 44),
         (3.662272356451e-04, -7.275957614183e-12, 0.)),
        ('R', 5, datetime.datetime(2016, 4, 9, 0, 15),
         (-8.258968591690e-06, -9.094947017729e-13, 0.))
    ]

    for i, (msg, fname) in enumerate(messages):
        fobj = io.StringIO(msg)
        nav = Nav2(fobj, fname)
        test = nav._parse_epoch_record(rec[i])
        assert standard[i] == test


def test_gps_error_nav():
    fobj = io.StringIO(GPS_MSG_ERR)
    Nav2(fobj, 'brdc2880.11n')


@raises(RinexError)
def test_glo_err_nav():
    fobj = io.StringIO(GLO_MSG_ERR)
    Nav2(fobj, 'zimj1000.16g')
